/**
 * Cavoke
 * API for cavoke interaction between main server and clients
 *
 * The version of the OpenAPI document: 0.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGameMove.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGameMove::OAIGameMove(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGameMove::OAIGameMove() {
    this->initializeModel();
}

OAIGameMove::~OAIGameMove() {}

void OAIGameMove::initializeModel() {

    m_move_isSet = false;
    m_move_isValid = false;
}

void OAIGameMove::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGameMove::fromJsonObject(QJsonObject json) {

    m_move_isValid = ::OpenAPI::fromJsonValue(move, json[QString("move")]);
    m_move_isSet = !json[QString("move")].isNull() && m_move_isValid;
}

QString OAIGameMove::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGameMove::asJsonObject() const {
    QJsonObject obj;
    if (m_move_isSet) {
        obj.insert(QString("move"), ::OpenAPI::toJsonValue(move));
    }
    return obj;
}

QString OAIGameMove::getMove() const {
    return move;
}
void OAIGameMove::setMove(const QString &move) {
    this->move = move;
    this->m_move_isSet = true;
}

bool OAIGameMove::is_move_Set() const{
    return m_move_isSet;
}

bool OAIGameMove::is_move_Valid() const{
    return m_move_isValid;
}

bool OAIGameMove::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_move_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGameMove::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_move_isValid && true;
}

} // namespace OpenAPI
