/**
 * Cavoke
 * API for cavoke interaction between main server and clients
 *
 * The version of the OpenAPI document: 0.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGameInfo.h
 *
 * Metadata about specific cavoke game (e.g. tictactoe, codenames)
 */

#ifndef OAIGameInfo_H
#define OAIGameInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGameInfo : public OAIObject {
public:
    OAIGameInfo();
    OAIGameInfo(QString json);
    ~OAIGameInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getPlayersNum() const;
    void setPlayersNum(const qint32 &players_num);
    bool is_players_num_Set() const;
    bool is_players_num_Valid() const;

    QList<QString> getRoleNames() const;
    void setRoleNames(const QList<QString> &role_names);
    bool is_role_names_Set() const;
    bool is_role_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 players_num;
    bool m_players_num_isSet;
    bool m_players_num_isValid;

    QList<QString> role_names;
    bool m_role_names_isSet;
    bool m_role_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGameInfo)

#endif // OAIGameInfo_H
