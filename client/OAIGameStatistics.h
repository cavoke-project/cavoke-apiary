/**
 * Cavoke
 * API for cavoke interaction between main server and clients
 *
 * The version of the OpenAPI document: 0.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGameStatistics.h
 *
 * Statistics on a specific game
 */

#ifndef OAIGameStatistics_H
#define OAIGameStatistics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGameStatistics : public OAIObject {
public:
    OAIGameStatistics();
    OAIGameStatistics(QString json);
    ~OAIGameStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAverageDurationSec() const;
    void setAverageDurationSec(const qint32 &average_duration_sec);
    bool is_average_duration_sec_Set() const;
    bool is_average_duration_sec_Valid() const;

    qint32 getAveragePlayersCount() const;
    void setAveragePlayersCount(const qint32 &average_players_count);
    bool is_average_players_count_Set() const;
    bool is_average_players_count_Valid() const;

    qint32 getTotalTimePlayedSec() const;
    void setTotalTimePlayedSec(const qint32 &total_time_played_sec);
    bool is_total_time_played_sec_Set() const;
    bool is_total_time_played_sec_Valid() const;

    qint32 getTotalGamesPlayed() const;
    void setTotalGamesPlayed(const qint32 &total_games_played);
    bool is_total_games_played_Set() const;
    bool is_total_games_played_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 average_duration_sec;
    bool m_average_duration_sec_isSet;
    bool m_average_duration_sec_isValid;

    qint32 average_players_count;
    bool m_average_players_count_isSet;
    bool m_average_players_count_isValid;

    qint32 total_time_played_sec;
    bool m_total_time_played_sec_isSet;
    bool m_total_time_played_sec_isValid;

    qint32 total_games_played;
    bool m_total_games_played_isSet;
    bool m_total_games_played_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGameStatistics)

#endif // OAIGameStatistics_H
