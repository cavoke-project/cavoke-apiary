/**
 * Cavoke
 * API for cavoke interaction between main server and clients
 *
 * The version of the OpenAPI document: 0.2.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISessionInfo.h
 *
 * Metadata about a session (room to game pair)
 */

#ifndef OAISessionInfo_H
#define OAISessionInfo_H

#include <QJsonObject>

#include "OAIPlayer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlayer;

class OAISessionInfo : public OAIObject {
public:
    OAISessionInfo();
    OAISessionInfo(QString json);
    ~OAISessionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    QString getGameId() const;
    void setGameId(const QString &game_id);
    bool is_game_id_Set() const;
    bool is_game_id_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getHostId() const;
    void setHostId(const QString &host_id);
    bool is_host_id_Set() const;
    bool is_host_id_Valid() const;

    QList<OAIPlayer> getPlayers() const;
    void setPlayers(const QList<OAIPlayer> &players);
    bool is_players_Set() const;
    bool is_players_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    QString game_id;
    bool m_game_id_isSet;
    bool m_game_id_isValid;

    qint32 status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString host_id;
    bool m_host_id_isSet;
    bool m_host_id_isValid;

    QList<OAIPlayer> players;
    bool m_players_isSet;
    bool m_players_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISessionInfo)

#endif // OAISessionInfo_H
